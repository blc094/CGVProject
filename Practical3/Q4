// 4. Write a C/C++ program to draw kite as given in image by using Bresenhamâ€™s line drawing algorithm.

#include "CGPracticals.h"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
namespace p34 {
	void setPixel(double x, double y)
	{
		glBegin(GL_POINTS);
		glVertex2d(x, y);
		glEnd();
	}
	void LineDDA(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)
	{
		GLdouble dx = x2 - x1, dy = y2 - y1, steps;
		float xInc, yInc, x = x1, y = y1;
		steps = (fabs(dx) > fabs(dy)) ? fabs(dx) : fabs(dy);
		xInc = dx / (float)steps;
		yInc = dy / (float)steps;
		setPixel(x, y);
		for (int k = 0; k < steps; k++)
		{
			x += xInc;
			y += yInc;
			setPixel(x, y);
		}
	}
	void display() {
		glClearColor(0, 0, 0, 0.0);
		glClear(GL_COLOR_BUFFER_BIT);
		glColor3f(1, 1, 1);
		LineDDA(320, 450, 320, 200);
		LineDDA(320, 450, 200, 360);
		LineDDA(320, 450, 445, 360);
		LineDDA(200, 360, 320, 240);
		LineDDA(445, 360, 320, 240);
		LineDDA(320, 200, 290, 170);
		LineDDA(320, 200, 350, 170);
		LineDDA(290, 170, 350, 170);
		LineDDA(200, 360, 445, 360);
		LineDDA(320, 170, 350, 150);
		LineDDA(350, 150, 300, 130);
		LineDDA(300, 130, 340, 110);
		LineDDA(340, 110, 310, 90);
		glFlush();
	}
	int width = 640;
	int height = 480;
	void Init() {
		glClearColor(1.0, 1.0, 1.0, 0);
		glColor3f(0.0, 0.0, 0.0);
		glViewport(0, 0, width, height);
		glMatrixMode(GL_PROJECTION);
		glLoadIdentity();
		gluOrtho2D(0, width, 0, height);
	}
	void main(int argc, char** argv) {
		glutInit(&argc, argv);
		glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
		glutInitWindowSize(width, height);
		glutInitWindowPosition(0, 0);
		glutCreateWindow("19012011094_KITE");
		Init();
		glutDisplayFunc(display);
		glutMainLoop();
	}
}
